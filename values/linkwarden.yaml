#!CMD: gt
# Default Helm values for fmjstudios/linkwarden.
# Reference: https://github.com/fmjstudios/helm

# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @section Image parameters
##

## Linkwarden Server Image
## ref: https://hub.docker.com/r/linkwarden/server/tags
## @param image.registry The Docker registry to pull the image from
## @param image.repository The registry repository to pull the image from
## @param image.tag The image tag to pull
## @param image.digest The image digest to pull
## @param image.pullPolicy The Kubernetes image pull policy
## @param image.pullSecrets A list of secrets to use for pulling images from private registries
#

image:
  registry: ghcr.io
  repository: linkwarden/linkwarden
  tag: "v2.5.3"
  pullPolicy: IfNotPresent


linkwarden:
  ## @param linkwarden.domain [string] The domain name to assign to Linkwarden, to be re-used as the NextAuth URL and
  ## as the 'host' entry within the Ingress configuration
  ##
  domain: &host "linkwarden.home"
  ## Used to encrypt the NextAuth.js JWT, and to hash email verification tokens.
  ##
  nextAuthSecret:
    ## @param linkwarden.nextAuthSecret.value [string] A secret string to encrypt JWTs and hash email verification tokens
    ##
    value: ""
    ## Fetch the NextAuth secret from an existing Secret
    ##
    existingSecret:
      ## @param linkwarden.nextAuthSecret.existingSecret.name [string] The name of an existing secret containing the secret string
      ##
      name: ""
      ## @param linkwarden.nextAuthSecret.existingSecret.key [string] The key within before mentioned secret containing the actual string
      ##
      key: ""
  ## @param linkwarden.paginationTakeCount [default: 20] The number of links to fetch every time you reach the bottom of the web page
  ##
  paginationTakeCount: 20
  ## @param linkwarden.autoscrollTimeout [default: 30] The amount of time to wait for the web page to be archived (in seconds).
  ##
  autoscrollTimeout: 30
  ## @param linkwarden.rearchiveLimit [default: 5] Adjusts how often a user can trigger a new archive for each link (in minutes).
  ##
  rearchiveLimit: 5
  ## @param linkwarden.maxFileSize [string] Optionally set a maximum file size
  ##
  maxFileSize: ""
  ## @param linkwarden.maxLinksPerUser [string] Optionally set the maximum amount of links a single user can create
  ##
  maxLinksPerUser: ""
  ## @param linkwarden.archiveTakeCount [string] Optionally set the number of archives to fetch
  ##
  archiveTakeCount: ""
  ## @param linkwarden.browserTimeout [string] Optionally set timeout duration for the browser
  ##
  browserTimeout: ""
  ## @param linkwarden.ignoreUnauthorizedCA [default: false] Optionally ignore unauthorized Certificate Authorities
  ## (Allow inscure TLS connections)
  ##
  ignoreUnauthorizedCA: false
  ## @param linkwarden.ignoreHTTPSErrors [default: false] Chromium to ignore SSL errors; this is useful to support generation of browser screenshots from sources with self-signed certificates or untrusted CAs
  ##
  ignoreHTTPSErrors: false

  ## Paths to use inside tha applications container for file storage.
  ##
  data:
    storageType: filesystem
    filesystem:
      dataPath: data
      pvc:
        size: 5Gi
        storageClass: kadalu.mirror
        reclaimPolicy: Retain
        existingClaim: ""

  database:
    user: "linkwarden"
    password: "linkwarden"

  ## Authentication settings
  ##
  auth:
    ## @param linkwarden.auth.disableRegistration [default: false] Disable registration for Linkwarden
    ##
    disableRegistration: false

    ## @param linkwarden.auth.enableCredentials [default: true] Enable credential logins for Linkwarden
    ##
    enableCredentials: true

    ## @param linkwarden.auth.disableNewSSOUsers [default: false] Disable new SSO users
    ##
    disableNewSSOUsers: false

    ## SSO Providers
    ## Officially supported and tested are only Authentik and Keycloak other SSO providers are solely provided for completeness
    ## ref: https://docs.linkwarden.app/self-hosting/sso-oauth
    ## @param linkwarden.auth.sso [array, object] A list of SSO providers to enable within Linkwarden
    ##
    sso:
      []
    # - provider: "authentik"
    #   customName: "authentik-custom"
    #   issuer: "authentik"
    #   clientId: "someId"
    #   clientSecret: "someSecret"
    # - provider: "keycloak"
    #   customName: "keycloak-custom"
    #   issuer: "keycloak"
    #   existingSecret: "keycloak-creds"

  ## SMTP settings
  ##
  smtp:
    ## @param linkwarden.smtp.enabled [default: false] Enable email integration within Linkwarden
    ##
    enabled: false

    ## The email address from which Linkwarden will send mails e.g.: "linkwarden@domain.tld"
    ## @param linkwarden.smtp.fromAddress [string] The address from which Linkwarden should send emails
    ##
    fromAddress: ""

    ## The mail server from which Linkwarden will send mails e.g.: "mx.domain.tld"
    ## @param linkwarden.smtp.server [string] The server from which Linkwarden should send emails
    ##
    server: ""

## @section ConfigMap parameters
##

## Linkwarden ConfigMap settings
## @param configMap.annotations Annotations for the ConfigMap resource
## @param configMap.labels Extra Labels for the ConfigMap resource

configMap:
  annotations: { }
  labels: { }

## @section Common Secret parameters
##

## Linkwarden Common Secret settings
## @param secret.annotations Common annotations for the SMTP, HIBP, Admin and Database secrets
## @param secret.labels Common extra labels for the SMTP, HIBP, Admin and Database secrets

secret:
  annotations: { }
  labels: { }

## @section Ingress parameters
##

## Linkwarden Ingress settings
## @param ingress.enabled Whether to enable Ingress
## @param ingress.className The IngressClass to use for the pod's ingress
## @param ingress.whitelist A comma-separated list of IP addresses to whitelist
## @param ingress.annotations Annotations for the Ingress resource
## @param ingress.tls A list of hostnames and secret names to use for TLS
## @param ingress.extraHosts A list of extra hosts for the Ingress resource (with linkwarden.domain)

ingress:
  enabled: true
  className: "nginx"
  ingressClassName: "nginx"
  whitelist: ""
  annotations: {}
  hosts:
    - host: *host
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
      - *host
      secretName: linkwarden-server-tls
## @section Service parameters
##

## Linkwarden RBAC settings
## @param rbac.create Whether to create RBAC resources
## @param rbac.rules Extra rules to add to the Role
##
rbac:
  create: true
  rules: []

## @section Service Account parameters
##

## Linkwarden Service Account settings
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
## @param serviceAccount.create Whether a service account should be created
## @param serviceAccount.automount Whether to automount the service account token
## @param serviceAccount.annotations Annotations to add to the service account
## @param serviceAccount.name A custom name for the service account, otherwise linkwarden.fullname is used
## @param serviceAccount.secrets A list of secrets mountable by this service account
##
serviceAccount:
  create: true
  automount: false
  annotations: { }
  name: ""
  secrets: []

## @section Liveness Probe parameters
##

## Linkwarden Liveness Probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
##
livenessProbe:
  ## @param livenessProbe.enabled Enable or disable the use of liveness probes
  ##
  enabled: true
  initialDelaySeconds: 5
  timeoutSeconds: 1
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 10

readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  timeoutSeconds: 1
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3
##
startupProbe:
  enabled: true
  initialDelaySeconds: 5
  timeoutSeconds: 1
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 10

resources:
  { }
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

## ref: https://kubernetes.io/docs/concepts/storage/volumes/
## @param volumes Define volumes for the Linkwarden pod
##
volumes: []

## ref: https://kubernetes.io/docs/concepts/storage/volumes/
## @param volumeMounts Define volumeMounts for the Linkwarden pod
##
volumeMounts: []

## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
## @param initContainers Define initContainers for the main Linkwarden server
##
initContainers: []

## @param nodeSelector Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: { }

## @param tolerations Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @param affinity Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: { }

## @param strategy Specify a deployment strategy for the Linkwarden pod
##
strategy:
  { }
#  type: RollingUpdate
#  rollingUpdate:
#    maxUnavailable: 1

## @param podAnnotations Extra annotations for the Linkwarden pod
##
podAnnotations: { }

## @param podLabels Extra labels for the Linkwarden pod
##
podLabels: { }
#  pod-security.kubernetes.io/warn: privileged
#  pod-security.kubernetes.io/audit: privileged
#  pod-security.kubernetes.io/enforce: baseline

## @param priorityClassName The name of an existing PriorityClass
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/
##
priorityClassName: ""

## @section Security context settings
##

## @param podSecurityContext Security context settings for the Linkwarden pod
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
podSecurityContext:
  { }
# fsGroup: 1001
# supplementalGroups:
#   - 1001

## @param securityContext General security context settings for
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext:
  { }
# allowPrivilegeEscalation: false
# privileged: false
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsGroup: 1001
# runAsUser: 1001
# capabilities:
#   drop:
#     - ALL

## @section Bitnami&reg; PostgreSQL parameters
##

## PostgreSQL configuration
## ref: https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
postgresql:
  ## @param postgresql.enabled Enable or disable the PostgreSQL subchart
  ##
  enabled: true
  ## Authentication parameters
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#setting-the-root-password-on-first-run
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#creating-a-database-on-first-run
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#creating-a-database-user-on-first-run
  ##
  auth:
    ## @param postgresql.auth.enablePostgresUser Assign a password to the "postgres" admin user. Otherwise, remote access will be blocked for this user
    ##
    enablePostgresUser: true
    ## @param postgresql.auth.postgresPassword Password for the "postgres" admin user. Ignored if `auth.existingSecret` is provided
    ##
    postgresPassword: "postgres"
    ## @param postgresql.auth.username Name for a custom user to create
    ##
    username: "linkwarden"
    ## @param postgresql.auth.password Password for the custom user to create. Ignored if `auth.existingSecret` is provided
    ##
    password: "linkwarden"
    ## @param postgresql.auth.database Name for a custom database to create
    ##
    database: "linkwarden"
    ## @param postgresql.auth.usePasswordFiles Mount credentials as a files instead of using an environment variable
    ##
    usePasswordFiles: false
  ## @section PostgreSQL Primary parameters
  ##
  primary:
    ## @param postgresql.primary.name Name of the primary database (eg primary, master, leader, ...)
    ##
    name: primary
    ## PostgreSQL Primary persistence configuration
    ##
    persistence:
      ## @param postgresql.primary.persistence.enabled Enable PostgreSQL Primary data persistence using PVC
      ##
      enabled: true
      ## @param postgresql.primary.persistence.existingClaim Name of an existing PVC to use
      ##
      existingClaim: ""
      ## @param postgresql.primary.persistence.storageClass PVC Storage Class for PostgreSQL Primary data volume
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass: ""
      ## @param postgresql.primary.persistence.accessModes PVC Access Mode for PostgreSQL volume
      ##
      accessModes:
        - ReadWriteOnce
      ## @param postgresql.primary.persistence.size PVC Storage Request for PostgreSQL volume
      ##
      size: 5Gi
