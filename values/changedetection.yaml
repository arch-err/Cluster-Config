#!CMD: gt
replicaCount: 1

image:
  repository: "ghcr.io/dgtlmoon/changedetection.io"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 5000

ingress:
  enabled: true
  className: "nginx"
  ingressClassName: "nginx"
  hosts:
    - host: &host "changedetection.home"
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
        - *host
      secretName: changedetection-server-tls

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- environment values
env:
  # -- simple key: val based env vars
  simple: {}
  #    foo: bar
  # -- full envs, they will be rendered as written here. Useful if you need to use secrets/cm
  full: []
#    - name: xxx
#      valueFrom:
#        configMapKeyRef:
#          key: "my-config"
#          name: "secret"
#          optional: false

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  storageClass: "kadalu.mirror"
  existingClaim: ""
  enabled: true
  accessMode: ReadWriteOnce
  size: 800Mi
  # if you need any additional volumes, you can define them here
  additionalVolumes: []
  # if you need any additional volume mounts, you can define them here
  additionalMounts: []
